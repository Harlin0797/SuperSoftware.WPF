<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:SuperSoftware.WPF.Controls"
                    xmlns:converters="clr-namespace:SuperSoftware.WPF.Converters"
                    xmlns:po="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options">

    <ResourceDictionary.MergedDictionaries>
        <!--<ResourceDictionary Source="pack://application:,,,/SuperSoftware.WPF;component/Styles/Colors.xaml" />
        <ResourceDictionary Source="pack://application:,,,/SuperSoftware.WPF;component/Styles/Fonts.xaml" />-->
        <!--<ResourceDictionary Source="pack://application:,,,/SuperSoftware.WPF;component/Styles/Controls.xaml" />-->
    </ResourceDictionary.MergedDictionaries>
    <converters:VisibilityConverter x:Key="VisibilityConverter" />
    <Style TargetType="{x:Type controls:ImageButton}">
        <Setter Property="Background"
                Value="#FFDDDDDD" />
        <Setter Property="BorderBrush"
                Value="#FF707070" />
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:ImageButton}">
                    <!--<Grid>-->
                    <!--<Rectangle x:Name="LayoutRoot"
                                   Fill="{TemplateBinding Background}"
                                   Effect="{TemplateBinding DropShadowEffect}"
                    x:Name="border"
                             BorderBrush="{TemplateBinding BorderBrush}"
                             BorderThickness="{TemplateBinding BorderThickness}"
                             Background="{TemplateBinding Background}"
                             CornerRadius="{TemplateBinding CornerRadius}"
                             Effect="{TemplateBinding Effect}"/>-->
                    <Border  x:Name="border"
                             BorderBrush="{TemplateBinding BorderBrush}"
                             BorderThickness="{TemplateBinding BorderThickness}"
                             Background="{TemplateBinding Background}"
                             SnapsToDevicePixels="true"
                             CornerRadius="{TemplateBinding CornerRadius}">

                        <!--<Border.Effect>

                                -->
                        <!--<DropShadowEffect Opacity="0.5"
                                              ShadowDepth="{TemplateBinding ShadowDepth}"
                                              BlurRadius="10"
                                              Color="LightGray"
                                              RenderingBias="Performance"></DropShadowEffect>-->
                        <!--
                                <DropShadowEffect x:Name="ropShadowEffect"></DropShadowEffect>
                            </Border.Effect>-->

                        <!--CornerRadius="{TemplateBinding CornerRadius}"-->

                        <!--<Grid x:Name="mainGird" VerticalAlignment="Center" Background="AliceBlue">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition Height="Auto"></RowDefinition>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                            </Grid.ColumnDefinitions>-->
                        <StackPanel x:Name="stackPanel"
                                    Orientation="Horizontal"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Margin="{TemplateBinding Padding}">
                            <Image  x:Name="image"
                                    Margin="{TemplateBinding ImageMargin}"
                                    Source="{TemplateBinding Image}"
                                    Width="{TemplateBinding ImageWidth}"
                                    Height="{TemplateBinding ImageHeight}"
                                    Visibility="{TemplateBinding Image,Converter={StaticResource VisibilityConverter}}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <ContentPresenter x:Name="contentPresenter"
                                              Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />

                            <!--<ContentPresenter x:Name="contentText"
                                              Grid.Row="0"
                                              Grid.Column="1"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />-->
                        </StackPanel>

                        <!--</Grid>-->

                        <!--
                        <TextBlock x:Name="contentText"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   Margin="{TemplateBinding Padding}"
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   Grid.Column="0" />-->

                    </Border>
                    <!--</Grid>-->
                    <!--<DataTemplate>
                        <Grid>

                        </Grid>
                    </DataTemplate>-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter  TargetName="border"
                                     Property="Background"
                                     Value="{Binding MouseOverBackground,Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter  TargetName="border"
                                     Property="BorderBrush"
                                     Value="{Binding MouseOverBorderBrush ,Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                            <!--<Setter  TargetName="image"
                                     Property="Source"
                                     Value="{Binding Image ,Mode=OneWay}" />-->
                            <Setter Property="TextElement.Foreground"
                                    TargetName="contentPresenter"
                                    Value="{Binding MouseOverForeground ,Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter  TargetName="border"
                                     Property="Background"
                                     Value="{Binding PressedBackground,Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter  TargetName="border"
                                     Property="BorderBrush"
                                     Value="{Binding PressedBorderBrush ,Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                            <!--<Setter  TargetName="stackPanel"
                                     Property="Margin"
                                     Value="{TemplateBinding Margin+1 }" />-->

                            <Setter Property="TextElement.Foreground"
                                    TargetName="contentPresenter"
                                    Value="{Binding PressedForeground ,Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />

                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter  TargetName="border"
                                     Property="Background"
                                     Value="{Binding DisabledBackground,Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter  TargetName="border"
                                     Property="BorderBrush"
                                     Value="{Binding DisabledBorderBrush ,Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                            <!--<Setter  TargetName="image"
                                     Property="Source"
                                     Value="{Binding Image ,Mode=OneWay}" />-->
                            <Setter Property="TextElement.Foreground"
                                    TargetName="contentPresenter"
                                    Value="{Binding DisabledForeground ,Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>